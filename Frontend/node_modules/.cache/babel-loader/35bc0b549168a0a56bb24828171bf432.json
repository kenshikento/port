{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\xampp1\\\\htdocs\\\\portfolio\\\\frontend\\\\src\\\\components\\\\Portfolio\\\\Portfolio.jsx\";\nimport React, { Component } from 'react';\nconst USER_SERVICE_URL = 'https://api.github.com/users/Kenshikento/repos';\n\nclass Portfolio extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchUsersWithFetchAPI = () => {\n      this.setState({ ...this.state,\n        isFetching: true\n      });\n      fetch(USER_SERVICE_URL).then(response => response.json()).then(result => {\n        this.setState({\n          repo: result,\n          isFetching: false\n        });\n        console.log(result);\n      }).catch(e => {\n        console.log(e);\n        this.setState({ ...this.state,\n          isFetching: false\n        });\n      });\n    };\n\n    this.fetchUsers = this.fetchUsersWithFetchAPI;\n    this.state = {\n      isFetching: false,\n      repo: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    this.timer = null;\n  }\n\n  render() {\n    const items = this.state.repo.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 53\n      }\n    }, item.svn_url));\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Repos\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"List of repositories\"), items);\n  }\n\n}\n\nexport default Portfolio;","map":{"version":3,"sources":["C:/xampp/xampp1/htdocs/portfolio/frontend/src/components/Portfolio/Portfolio.jsx"],"names":["React","Component","USER_SERVICE_URL","Portfolio","constructor","props","fetchUsersWithFetchAPI","setState","state","isFetching","fetch","then","response","json","result","repo","console","log","catch","e","fetchUsers","componentDidMount","componentWillUnmount","clearInterval","timer","render","items","map","item","id","svn_url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,MAAMC,gBAAgB,GAAG,gDAAzB;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAC9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAiBnBC,sBAjBmB,GAiBM,MAAM;AAC3B,WAAKC,QAAL,CAAc,EAAC,GAAG,KAAKC,KAAT;AAAgBC,QAAAA,UAAU,EAAE;AAA5B,OAAd;AAEAC,MAAAA,KAAK,CAACR,gBAAD,CAAL,CACKS,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,MAAM,IAAI;AACZ,aAAKP,QAAL,CAAc;AAACQ,UAAAA,IAAI,EAAED,MAAP;AAAeL,UAAAA,UAAU,EAAE;AAA3B,SAAd;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACH,OALL,EAMKI,KANL,CAMWC,CAAC,IAAI;AACRH,QAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACA,aAAKZ,QAAL,CAAc,EAAC,GAAG,KAAKC,KAAT;AAAgBC,UAAAA,UAAU,EAAE;AAA5B,SAAd;AACH,OATL;AAUH,KA9BkB;;AAAA,SAgCnBW,UAhCmB,GAgCN,KAAKd,sBAhCC;AAEf,SAAKE,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,KADH;AAETM,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AAEDM,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,UAAL;AACH;;AAEDE,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKC,KAAN,CAAb;AACA,SAAKA,KAAL,GAAa,IAAb;AACH;;AAmBDC,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAG,KAAKlB,KAAL,CAAWO,IAAX,CAAgBY,GAAhB,CAAqBC,IAAD,iBAAU;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAI,CAACE,OAAxB,CAA9B,CAAd;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,EAGKJ,KAHL,CADJ;AASH;;AA9C6B;;AAiDlC,eAAevB,SAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst USER_SERVICE_URL = 'https://api.github.com/users/Kenshikento/repos';\r\n\r\nclass Portfolio extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isFetching: false,\r\n            repo: [] \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchUsers();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n        this.timer = null;\r\n    }\r\n\r\n    fetchUsersWithFetchAPI = () => {\r\n        this.setState({...this.state, isFetching: true});\r\n\r\n        fetch(USER_SERVICE_URL)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                this.setState({repo: result, isFetching: false})\r\n                console.log(result);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                this.setState({...this.state, isFetching: false});\r\n            });\r\n    };\r\n\r\n    fetchUsers = this.fetchUsersWithFetchAPI;\r\n    \r\n    render() {\r\n        const items = this.state.repo.map((item) => <li key={item.id}>{item.svn_url}</li>);\r\n        return (\r\n            <ul>\r\n                <h4>Repos</h4>\r\n                <h3>List of repositories</h3>\r\n                {items}\r\n\r\n                \r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Portfolio;"]},"metadata":{},"sourceType":"module"}