{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\xampp1\\\\htdocs\\\\portfolio\\\\frontend\\\\src\\\\components\\\\Portfolio\\\\Portfolio.jsx\";\nimport React, { Component } from 'react';\nimport RepoList from './RepoList';\nimport './Portfolio.scss';\nconst USER_SERVICE_URL = 'https://api.github.com/users/Kenshikento/repos';\n\nclass Portfolio extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchUsersWithFetchAPI = () => {\n      this.setState({ ...this.state,\n        isFetching: true\n      });\n      fetch(USER_SERVICE_URL).then(response => response.json()).then(result => {\n        let groupLang = this.groupBy(result, 'language');\n        let keys = Object.keys(groupLang);\n        this.setState({\n          repo: groupLang,\n          isFetching: false,\n          key: keys\n        });\n      }).catch(e => {\n        console.log(e); // TODO: to remove\n\n        this.setState({ ...this.state,\n          isFetching: false\n        });\n      });\n    };\n\n    this.fetchUsers = this.fetchUsersWithFetchAPI;\n\n    this.groupBy = (array, key) => {\n      return array.reduce((result, currentValue) => {\n        (result[currentValue[key]] = result[currentValue[key]] || []).push(currentValue);\n        return result;\n      }, {});\n    };\n\n    this.toggle = name => {\n      console.log(name);\n    };\n\n    this.state = {\n      isFetching: false,\n      repo: [],\n      key: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    this.timer = null;\n  }\n\n  render() {\n    //const groupLang = this.groupBy(this.state.repo,'language');\n    console.log(this.state.key);\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"List of GitHub repositories\"));\n  }\n\n}\n\nexport default Portfolio;","map":{"version":3,"sources":["C:/xampp/xampp1/htdocs/portfolio/frontend/src/components/Portfolio/Portfolio.jsx"],"names":["React","Component","RepoList","USER_SERVICE_URL","Portfolio","constructor","props","fetchUsersWithFetchAPI","setState","state","isFetching","fetch","then","response","json","result","groupLang","groupBy","keys","Object","repo","key","catch","e","console","log","fetchUsers","array","reduce","currentValue","push","toggle","name","componentDidMount","componentWillUnmount","clearInterval","timer","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,kBAAP;AAEA,MAAMC,gBAAgB,GAAG,gDAAzB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC9BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,sBAlBmB,GAkBM,MAAM;AAC3B,WAAKC,QAAL,CAAc,EAAC,GAAG,KAAKC,KAAT;AAAgBC,QAAAA,UAAU,EAAE;AAA5B,OAAd;AAEAC,MAAAA,KAAK,CAACR,gBAAD,CAAL,CACKS,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,MAAM,IAAI;AACZ,YAAIC,SAAS,GAAG,KAAKC,OAAL,CAAaF,MAAb,EAAoB,UAApB,CAAhB;AACA,YAAIG,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,SAAZ,CAAX;AACA,aAAKR,QAAL,CAAc;AAACY,UAAAA,IAAI,EAAEJ,SAAP;AAAkBN,UAAAA,UAAU,EAAE,KAA9B;AAAqCW,UAAAA,GAAG,EAACH;AAAzC,SAAd;AACH,OANL,EAOKI,KAPL,CAOWC,CAAC,IAAI;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,EADQ,CACQ;;AAChB,aAAKf,QAAL,CAAc,EAAC,GAAG,KAAKC,KAAT;AAAgBC,UAAAA,UAAU,EAAE;AAA5B,SAAd;AACH,OAVL;AAWH,KAhCkB;;AAAA,SAkCnBgB,UAlCmB,GAkCN,KAAKnB,sBAlCC;;AAAA,SAoCnBU,OApCmB,GAoCT,CAACU,KAAD,EAAQN,GAAR,KAAgB;AACtB,aAAOM,KAAK,CAACC,MAAN,CAAa,CAACb,MAAD,EAASc,YAAT,KAA0B;AAC5C,SAACd,MAAM,CAACc,YAAY,CAACR,GAAD,CAAb,CAAN,GAA4BN,MAAM,CAACc,YAAY,CAACR,GAAD,CAAb,CAAN,IAA6B,EAA1D,EAA8DS,IAA9D,CACED,YADF;AAGA,eAAOd,MAAP;AACD,OALM,EAKJ,EALI,CAAP;AAMH,KA3CkB;;AAAA,SA6CnBgB,MA7CmB,GA6CRC,IAAD,IAAU;AAChBR,MAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACH,KA/CkB;;AAEf,SAAKvB,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,KADH;AAETU,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,GAAG,EAAE;AAHI,KAAb;AAKH;;AAEDY,EAAAA,iBAAiB,GAAG;AAChB,SAAKP,UAAL;AACH;;AAEDQ,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKC,KAAN,CAAb;AACA,SAAKA,KAAL,GAAa,IAAb;AACH;;AAiCDC,EAAAA,MAAM,GAAG;AACL;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWY,GAAvB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,CADJ;AAKH;;AA1D6B;;AA6DlC,eAAejB,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport RepoList from './RepoList';\r\nimport './Portfolio.scss';\r\n\r\nconst USER_SERVICE_URL = 'https://api.github.com/users/Kenshikento/repos';\r\n\r\nclass Portfolio extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isFetching: false,\r\n            repo: [],\r\n            key: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchUsers();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n        this.timer = null;\r\n    }\r\n\r\n    fetchUsersWithFetchAPI = () => {\r\n        this.setState({...this.state, isFetching: true});\r\n\r\n        fetch(USER_SERVICE_URL)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                let groupLang = this.groupBy(result,'language');\r\n                let keys = Object.keys(groupLang);\r\n                this.setState({repo: groupLang, isFetching: false, key:keys})\r\n            })\r\n            .catch(e => {\r\n                console.log(e); // TODO: to remove\r\n                this.setState({...this.state, isFetching: false});\r\n            });\r\n    };\r\n\r\n    fetchUsers = this.fetchUsersWithFetchAPI;\r\n    \r\n    groupBy = (array, key) => {\r\n        return array.reduce((result, currentValue) => {\r\n          (result[currentValue[key]] = result[currentValue[key]] || []).push(\r\n            currentValue\r\n          );\r\n          return result;\r\n        }, {});\r\n    };\r\n\r\n    toggle =  (name) => {\r\n        console.log(name);\r\n    }\r\n\r\n    render() {\r\n        //const groupLang = this.groupBy(this.state.repo,'language');\r\n        console.log(this.state.key)\r\n        return (\r\n            <ul>\r\n                <h1>List of GitHub repositories</h1>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Portfolio;"]},"metadata":{},"sourceType":"module"}